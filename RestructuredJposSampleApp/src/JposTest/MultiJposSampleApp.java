/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JposTest.src;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author NP1675
 */
public class MultiJposSampleApp extends javax.swing.JFrame {

    public static final String JPOS_SCALE = "Scale";
    public static final String JPOS_SCANNER = "Scanner";
    private int tabCount = 0;
    private JposSampleApp jposSampleApp;

    /**
     * Creates new form MultiJposSampleApp
     */
    public MultiJposSampleApp() {
        try {
         String os = System.getProperty("os.name").toLowerCase();
         if (isWindows(os)) {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
         } else {
                UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
         }
         
        initComponents();
       
        //Add Scale tab
        String tabScaleName = JPOS_SCALE;
        addOrRemoveTab(tabScaleName);
        
        setScaleAvailability();
        
        //Add Scanner tab
        String tabScannerName = JPOS_SCANNER + "_" + String.valueOf(tabCount);
        addOrRemoveTab(tabScannerName);
        
        tabbedPane.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
              if (e.getClickCount() > 0) {
                //Find the right tab label.
                int index = tabbedPane.indexAtLocation(e.getX(), e.getY());
                if (index >= 0) {
                  Component c = tabbedPane.getTabComponentAt(index);
                  if (c instanceof JPanel) {
                      Component cInner = ((JPanel) c).getComponent(0);
                      if (cInner instanceof JLabel) {
                        JLabel innerComponent = (JLabel) cInner;
                        if(innerComponent.getText().contains(JPOS_SCANNER)){
                          JposSampleApp.scannerTabName = innerComponent.getText();
                        }
                      }
                    }
                   }
                 }
               }
            });
        } catch (UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException e) {
            Logger.getLogger(JposSampleApp.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    //check for platform
    private boolean isWindows(String os) {
        return (os.contains("win"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        scannerBtn = new javax.swing.JButton();
        scaleBtn = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setName("mainPanel"); // NOI18N

        scannerBtn.setText("Add Scanner");
        scannerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scannerBtnActionPerformed(evt);
            }
        });

        scaleBtn.setText("Add Scale");
        scaleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scaleBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap(1028, Short.MAX_VALUE)
                .addComponent(scannerBtn)
                .addGap(9, 9, 9)
                .addComponent(scaleBtn)
                .addContainerGap())
            .addComponent(tabbedPane)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scaleBtn)
                    .addComponent(scannerBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void scaleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scaleBtnActionPerformed
        String tabScaleName = JPOS_SCALE;
        addOrRemoveTab(tabScaleName);   
        
        setScaleAvailability();
    }//GEN-LAST:event_scaleBtnActionPerformed

    private void scannerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scannerBtnActionPerformed
        String tabScannerName = JPOS_SCANNER + "_" + String.valueOf(tabCount);
        addOrRemoveTab(tabScannerName);  
    }//GEN-LAST:event_scannerBtnActionPerformed

    private void addOrRemoveTab(String tabName){
        if(tabName.contains(JPOS_SCANNER)){
         jposSampleApp = new JposSampleApp(JPOS_SCANNER, tabName, "");
        }
        else if(tabName.contains(JPOS_SCALE)){
         jposSampleApp = new JposSampleApp(JPOS_SCALE, "", "");
        }
        
        tabbedPane.addTab(tabName, jposSampleApp.getComponent(0));

        JPanel pnlTab = new JPanel(new GridBagLayout());
        pnlTab.setOpaque(false);
        JLabel tabTitleLabel = new JLabel(tabName);
        JButton btnClose = new JButton("x");
        btnClose.setBorder(null);
        btnClose.setPreferredSize(new Dimension(30,30));        
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 30;
        gbc.gridy = 0;
        gbc.weightx = 1;
        
        pnlTab.add(tabTitleLabel, gbc);

        gbc.gridx++;
        gbc.weightx = 0;
        pnlTab.add(btnClose, gbc);
        
        tabbedPane.setTabComponentAt(tabbedPane.getTabCount()-1, pnlTab); 
        tabCount++;
        tabbedPane.setSelectedIndex(tabbedPane.getTabCount()-1);
        btnClose.addMouseListener(new MouseAdapter(){
         @Override
         public void mouseClicked(MouseEvent e){
            int index = tabbedPane.indexOfTab(tabName);
            
            if(index >= 0){
                tabbedPane.remove(index);
                if(tabName.contains(JPOS_SCANNER)){
                   JposSampleApp.closeScanner(tabName); 
                   JposSampleApp.scannersList.remove(tabName);
                }
            }
            
            //Find the right tab label.
            if (tabbedPane.getSelectedIndex() >= 0) {
                Component c = tabbedPane.getTabComponentAt(tabbedPane.getSelectedIndex());
                if (c instanceof JPanel) {
                    Component cInner = ((JPanel) c).getComponent(0);
                    if (cInner instanceof JLabel) {
                      JLabel innerComponent = (JLabel) cInner;
                      if(innerComponent.getText().contains(JPOS_SCANNER)){
                          JposSampleApp.scannerTabName = innerComponent.getText();
                      }
                    }
                }
            }
            
            if(tabName.contains(JPOS_SCALE)){
                setScaleAvailability();
            }
          }
        });
    }
    
    private void setScaleAvailability(){
        int indexScale = tabbedPane.indexOfTab(JPOS_SCALE);
        if(indexScale >= 0){
          scaleBtn.setEnabled(false);
        }
        else if(indexScale < 0){
          scaleBtn.setEnabled(true);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultiJposSampleApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultiJposSampleApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultiJposSampleApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultiJposSampleApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultiJposSampleApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton scaleBtn;
    private javax.swing.JButton scannerBtn;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
}
